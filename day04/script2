#! /usr/bin/env bash

# byr (Birth Year)
# iyr (Issue Year)
# eyr (Expiration Year)
# hgt (Height)
# hcl (Hair Color)
# ecl (Eye Color)
# pid (Passport ID)
# cid (Country ID) ignore!

# KEYS=( "byr" "iyr" "eyr" "hgt" "hcl" "ecl" "pid" "cid" )

declare -a PAIRS
declare -A PASSPORT

# is_key_valid() {
  # local key k
  # key="$1"
  # for k in "${KEYS[@]}"; do
    # [[ $k == "$key" ]] && return 0
  # done
  # return 1
# }

get_pairs() {
  PAIRS=()
  read -d=$'\n' -ra PAIRS <<< "${1/ /$'\n'}"
}

check_height() {
  local value height unit
  value="$1"
  [[ $value =~ ^([0-9]+)(in|cm)$ ]] && {
    height="${BASH_REMATCH[1]}"
    unit="${BASH_REMATCH[2]}"
    # echo "-> $height $unit"
    case $unit in
      "cm") ((height>=150 && height<=193)) && return 0 ;;
      "in") ((height>=59  && height<=76))  && return 0 ;;
    esac
  }
  return 1
}

make_passport() {
  local pair key value count
  get_pairs "$1"
  PASSPORT=()
  count=0
  for pair in "${PAIRS[@]}"; do
    [[ $pair =~ ^(.+):(.+)$ ]] && {
      key="${BASH_REMATCH[1]}"
      value="${BASH_REMATCH[2]}"
      PASSPORT["$key"]="$value"
    }
  done
}

check_passport() {
  local key value count valid
  make_passport "$1"
  valid=0
  ((count=${#PASSPORT[@]}))
  ((count<8)) && { [[ ${PASSPORT["cid"]} ]] || ((count++)); }
  ((count==8)) && {
    for key in "${!PASSPORT[@]}"; do
      value="${PASSPORT[$key]}"
      # echo -n "$key = $value "
      case $key in
        byr) [[ $value =~ ^[0-9]{4}$ ]] && ((value>=1920 && value<=2002)) && ((valid++)) ;;
        iyr) [[ $value =~ ^[0-9]{4}$ ]] && ((value>=2010 && value<=2020)) && ((valid++)) ;;
        eyr) [[ $value =~ ^[0-9]{4}$ ]] && ((value>=2020 && value<=2030)) && ((valid++)) ;;
        hgt) check_height "$value" && ((valid++)) ;;
        hcl) [[ $value =~ ^#[0-9a-f]{6}$ ]] && ((valid++)) ;;
        ecl) [[ $value =~ ^(amb|blu|brn|gry|grn|hzl|oth)$ ]] && ((valid++)) ;;
        pid) [[ $value =~ ^[0-9]{9}$ ]] && ((valid++)) ;;
      esac
      # echo "$valid"
    done
    # echo -n "(${#PASSPORT[@]}/$count -- $valid) "
    ((valid==7)) && return 0
  }
  return 1
}

valid_passport=0
# passport_count=0

while read -r line; do
  [[ $line ]] && {
    [[ $psp ]] && psp+=" $line"
    [[ $psp ]] || psp+="$line"
  }
  [[ $line ]] || {
    # echo -n "$((++passport_count)). $psp >> "
    check_passport "$psp" && ((valid_passport++))
    # echo "[$valid_passport]"
    unset psp
  }
done < "./input.txt"

echo $((valid_passport))
